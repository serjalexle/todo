import 'package:android_app/providers/user_provider.dart';
import 'package:android_app/services/api_service.dart';
import 'package:android_app/services/storage_service.dart';
import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:go_router/go_router.dart';

void logout(BuildContext context, WidgetRef ref) async {
  final apiServiceProvider = Provider<ApiService>((ref) => ApiService(ref));
  final storageService = ref.read(storageServiceProvider);
  final apiService = ref.read(apiServiceProvider);

  try {
    await apiService.logout(); // üîπ –ó–∞–ø–∏—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥ –¥–ª—è –ª–æ–≥–∞—É—Ç—É (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)

    // üîπ –û—á–∏—â–∞—î–º–æ —Ç–æ–∫–µ–Ω–∏ —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await storageService.clearTokens();
    ref.read(userProvider.notifier).clearUser();

    debugPrint("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤ –∑ —Å–∏—Å—Ç–µ–º–∏.");

    if (context.mounted) {
      // üîπ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ª–æ–≥—ñ–Ω—É
      context.go('/login');
    }
  } on DioException catch (e) {
    debugPrint("Logout Error: ${e.response?.data ?? e.message}");
  } catch (e) {
    debugPrint("–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏—Ö–æ–¥—É: $e");
  }
}
