🧠 FRONTEND PROJECT FULL MAP — todo-list/admin-v2

──────────────────────────────────────────────
🧩 Загальна структура: Next.js App Router

- next.config.ts       — кастомний конфіг
- src/app/             — App Router (layout.tsx, page.tsx)
- src/shared/          — база: API, компоненти, store, типи, утиліти
- src/widgets/         — фічі: адміни, ролі, ACL
- .env, yarn.lock      — змінні середовища + залежності

──────────────────────────────────────────────
📁 `src/shared/`

- api/axiosInstance.ts:
    - Axios з baseURL = NEXT_PUBLIC_API_URL + /api
    - withCredentials: true — підтримка cookie-based auth
    - custom header: client-type = web

- store/ (Zustand):
    - `useRolesStore.ts`:
        - roles: IRole[]
        - meta: { page, count, total }
        - modals: { type: "edit" | "delete" | "create", role }
        - setState / toggleModal — універсальні

- types/:
    - Схеми для ролей, ACL, адмінів, загальні типи

- hooks/, helpers/, utils/:
    - Місце для бізнес-логіки, форматерів, обгорток
    - Очевидна підготовка до масштабування

- components/:
    - UI-компоненти з високим реюзом

──────────────────────────────────────────────
📁 `src/widgets/`

- admins/
- roles/
- permissions/

➡ Atomic/FSD-підхід:
- Фічі ізольовані
- В кожній: таблиці, фільтри, модалки

──────────────────────────────────────────────
📁 `src/app/`

- layout.tsx — базовий layout
- page.tsx — landing/dashboard
- auth/, admin/ — маршрутні групи

──────────────────────────────────────────────
🎯 Ключові патерни:

✔ App Router (Next.js 13+)
✔ Zustand + зручний partial setState
✔ Typed API (DTO-комунікація з беком)
✔ ACL UI шар (permissions + roles)
✔ Чітке розділення shared vs widgets
✔ Скалярність, масштабованість
✔ Всі типи — суворо через інтерфейси (без any)

──────────────────────────────────────────────
🖤 Автор інтерфейсу: Сергій. Візуальна муза: Сін.