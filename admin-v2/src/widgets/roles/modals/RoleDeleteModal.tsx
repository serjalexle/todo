"use client";

import {
  Dialog,
  DialogActions,
  DialogContent,
  DialogTitle,
  Button,
  Typography,
} from "@mui/material";
import { useRolesStore } from "@/shared/store/useRolesStore";
import { toast } from "react-toastify";
import { apiHandleError } from "@/shared/helpers/apiHandleError";
import { deleteRole, getAllRoles } from "@/shared/api/admin/rolesApi";
import { wrapWithRefetch } from "@/shared/utils/apiHelpers";

const RoleDeleteModal = () => {
  const { modals, toggleModal, roles, setState } = useRolesStore();

  const handleClose = () => {
    toggleModal(null);
  };

  const handleConfirm = async () => {
    if (!modals.roleId) return;

    const toastId = toast.loading("–í–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–ª—ñ...");

    try {
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π —É —Å—Ç–æ—Ä—ñ
      const updated = roles.filter((r) => r._id !== modals.roleId);
      setState("roles", updated);

      const response = await wrapWithRefetch(
        () => deleteRole(modals.roleId as string),
        () =>
          getAllRoles({
            page: 1,
            count: 10,
          })
      );

      setState("roles", response?.result?.roles);

      console.log(response);

      toast.update(toastId, {
        render: "–†–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ üóëÔ∏è",
        type: "success",
        isLoading: false,
        autoClose: 2000,
      });

      handleClose();
    } catch (error) {
      apiHandleError(error, toastId);
    }
  };

  return (
    <Dialog open={modals.type === "delete"} onClose={handleClose}>
      <DialogTitle>–í–∏–¥–∞–ª–∏—Ç–∏ —Ä–æ–ª—å?</DialogTitle>
      <DialogContent>
        <Typography>
          –í–∏ —Ç–æ—á–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é —Ä–æ–ª—å? –¶—é –¥—ñ—é –Ω–µ –º–æ–∂–Ω–∞ –±—É–¥–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏.
        </Typography>
      </DialogContent>
      <DialogActions>
        <Button onClick={handleClose} color="inherit">
          –ù—ñ
        </Button>
        <Button onClick={handleConfirm} color="error" variant="contained">
          –¢–∞–∫, –≤–∏–¥–∞–ª–∏—Ç–∏
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default RoleDeleteModal;
