"use client";

import { useEffect } from "react";
import { useRouter } from "next/navigation";
import { useAuthStore } from "@/shared/store/useAuthStore";

// * –ü—Ä–æ–ø—Å–∏ –¥–ª—è guard'–∞
interface IProps {
  children: React.ReactNode;
  redirectTo?: string;
}

const AuthGuard = ({ children, redirectTo = "/auth/login" }: IProps) => {
  const router = useRouter();
  const { currentAdmin, isAuthInitialized } = useAuthStore();

  useEffect(() => {
    if (isAuthInitialized && !currentAdmin) {
      router.replace(redirectTo);
    }
  }, [currentAdmin, isAuthInitialized, router, redirectTo]);

  // üïê –ü–æ–∫–∏ —â–µ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º–æ
  if (!isAuthInitialized) return null;

  // ‚ùå –Ø–∫—â–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
  if (!currentAdmin) return null;

  // ‚úÖ –Ø–∫—â–æ –≤—Å–µ –æ–∫
  return <>{children}</>;
};

export default AuthGuard;
