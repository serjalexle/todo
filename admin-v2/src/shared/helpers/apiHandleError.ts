// üìÑ shared/helpers/apiHandleError.ts
import { AxiosError } from "axios";
import { Id, toast } from "react-toastify";

/**
 * –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è API-–∑–∞–ø–∏—Ç—ñ–≤.
 * @param error - –ë—É–¥—å-—è–∫–∞ –ø–æ–º–∏–ª–∫–∞ (AxiosError, string —Ç–æ—â–æ)
 * @param toastId - ID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ toast'–∞ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
 */
export const apiHandleError = (error: unknown, toastId?: Id): void => {
  const defaultMessage = "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";

  // üü† –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É –æ–±—Ä–æ–±–∫—É AxiosError, HTTP status —Ç–æ—â–æ

  let message = "";

  if (error instanceof AxiosError) {
    message =
      error?.response?.data?.message ||
      error?.response?.data?.detail?.[0]?.msg ||
      error?.response?.data?.detail ||
      error?.message ||
      defaultMessage;
  }

  if (typeof error === "string") {
    message = error || defaultMessage;
  }

  console.log("üö© apiHandleError", error);

  if (toastId) {
    toast.update(toastId, {
      render: message,
      type: "error",
      isLoading: false,
      autoClose: 4000,
    });
  } else {
    toast.error(message);
  }
};
