// üìÑ shared/hooks/useAdminAuthInitializer.ts
import { useEffect } from "react";
import { useAuthStore } from "@/shared/store/useAuthStore";
import { apiHandleError } from "@/shared/helpers/apiHandleError";
import { refreshAdmin } from "../api/admin/authApi";
import { useRouter } from "next/navigation";

export const useAdminAuthInitializer = (): void => {
  const { setState } = useAuthStore();
  const router = useRouter();
  const location =
    typeof window !== "undefined" ? window.location.pathname : null;

  useEffect(() => {
    const refresh = async () => {
      try {
        const res = await refreshAdmin();

        const admin = res?.result;
        if (admin) {
          setState("currentAdmin", admin);

          if (location === "/auth/login") {
            // ‚úÖ –Ø–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ª–æ–≥—ñ–Ω—É, –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ /admin
            router.push("/admin/dashboard");
          }
        } else {
          // ‚ùå –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ toast, –ø—Ä–æ—Å—Ç–æ –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π
          setState("currentAdmin", null);
        }
      } catch (error) {
        setState("currentAdmin", null);
        // ‚ùå –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ toast, –ø—Ä–æ—Å—Ç–æ –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π
        apiHandleError(error); // –ú–æ–∂–µ—à –∑–∞–∫–æ–º–µ–Ω—Ç–∏—Ç–∏, —è–∫—â–æ —Ö–æ—á–µ—à –∞–±—Å–æ–ª—é—Ç–Ω—É —Ç–∏—à—É
      } finally {
        setState("isAuthInitialized", true); // ‚úÖ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
      }
    };

    refresh();
  }, [setState, router, location]); // –î–æ–¥–∞—î–º–æ location –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, —â–æ–± –Ω–µ –±—É–ª–æ –ø–æ–º–∏–ª–æ–∫ –∑ ESLint
};
